DROP VIEW PredictTVseriesContract;
DROP VIEW PredictTVseriesTaps;
DROP VIEW PredictTVseriesTapsMax;
DROP VIEW MaxTitle;
DROP VIEW SerieInfo;
DROP VIEW NextSerie;



CREATE OR REPLACE VIEW PredictTVseriesContract AS	
SELECT clientId, contractID 	
FROM  CLIENTS NATURAL JOIN  contracts;	


CREATE OR REPLACE VIEW PredictTVseriesTaps AS
SELECT clientId, title, episode, season, view_datetime	
FROM  PredictTVseriesContract 
NATURAL JOIN  taps_series;
--client with his views


CREATE OR REPLACE VIEW PredictTVseriesTapsMax AS	
SELECT clientId AS clientId1, title AS title1, max(view_datetime) AS mostRecent	
FROM  PredictTVseriesTaps
GROUP BY clientId,title;
--Last views of each client


CREATE OR REPLACE VIEW MaxTitle AS
SELECT clientId, title, episode, season, mostRecent	
FROM PredictTVseriesTapsMax 
JOIN PredictTVseriesTaps
ON (title=title1 
AND mostRecent= view_datetime
AND clientId = clientId1);
--Each client with the last views of each serie


CREATE OR REPLACE VIEW SerieInfo AS
SELECT title, season, episodes 
FROM SEASONS
ORDER BY title, season;
--The series with its max num of episodes per season


CREATE OR REPLACE VIEW NextSerie AS
SELECT clientId, title, episode, episodes, season, mostRecent	
from MaxTitle
NATURAL JOIN SerieInfo
ORDER BY mostRecent desc;
--I join the maximun number of episodes and the each client with the last views of each serie


CREATE OR REPLACE VIEW NextSerie1 AS
SELECT clientId, title, episode, episodes, season, mostRecent,
CASE WHEN episode = episodes THEN 'invalid' 
ELSE 'valid'
END AS Validation
FROM NextSerie;
--I classify the views of the last episode of a serie or not

CREATE OR REPLACE VIEW NextSerie2 AS
SELECT clientId, title, episode, season, validation, mostRecent
from NextSerie1
WHERE Validation = 'valid';
--I select just the valid taps

CREATE OR REPLACE VIEW predictSerie AS
SELECT clientId, title, (episode+1) AS nextEpisode, season
from (SELECT * FROM(
SELECT clientId, title, episode, season, validation, RANK() OVER (PARTITION BY clientId ORDER BY mostRecent desc) as ultimo
FROM NextSerie2)
WHERE ultimo = 1);


SELECT * FROM predictSerie;
SELECT * FROM NextSerie2;
SELECT * FROM NextSerie1;
SELECT * FROM NextSerie;
SELECT * FROM SerieInfo;
SELECT * FROM MaxTitle;	
SELECT * FROM PredictTVseriesContract;	
SELECT * FROM PredictTVseriesTaps;
SELECT * FROM PredictTVseriesTapsMax;




(SELECT * FROM(
SELECT clientId, title, episode, season, validation, RANK() OVER (PARTITION BY clientId ORDER BY mostRecent desc) as ultimo
FROM NextSerie2)


CREATE VIEW PredictTVseriesTapsMax AS	
SELECT title AS title1, max(view_datetime) AS mostRecent	
FROM  PredictTVseriesTaps 	
GROUP BY title;


Modern Family
         3          6 27-DEC-16

Breaking Bad
        13          3 09-JUL-16


15/73766815/37T
Cheers
        25          3 14-OCT-16
